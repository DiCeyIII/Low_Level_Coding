// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    	IN in[16], load, address[15];
    	OUT out[16];

    	PARTS:
    // Put your code here:
	
	//Set RAM
	Not(in=address[14],out=firstdig0);
	And(a=firstdig0,b=load,out=load1andfirstdig0)	;
	RAM16K(in=in,load=load1andfirstdig0,address=address[0..13],out=outRam);


	//Set Screen
	Not(in=address[13],out=seconddig0);
	And(a=address[14],b=seconddig0,out=combined);
	And(a=combined,b=load,out=loadtoscreen);
	Screen(in=in,load=loadtoscreen,address=address[0..12],out=outscreen);


	// Set Keyboard
	

	Keyboard(out=outkbd);


	// Using Muxes
	Mux16(a=outscreen,b=outkbd,sel= address[13],out=firstout);
	Mux16(a=outRam,b=firstout,sel=address[14],out=out);

	
	
	


	
	

}